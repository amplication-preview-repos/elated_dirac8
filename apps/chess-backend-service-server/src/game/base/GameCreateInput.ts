/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumGameGameResult } from "./EnumGameGameResult";
import { EnumGameResult } from "./EnumGameResult";
import { TournamentGameCreateNestedManyWithoutGamesInput } from "./TournamentGameCreateNestedManyWithoutGamesInput";

@InputType()
class GameCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  gamePlayedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gamePlayer1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  gamePlayer2?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumGameGameResult,
  })
  @IsEnum(EnumGameGameResult)
  @IsOptional()
  @Field(() => EnumGameGameResult, {
    nullable: true,
  })
  gameResult?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  playedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  player1?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  player2?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumGameResult,
  })
  @IsEnum(EnumGameResult)
  @IsOptional()
  @Field(() => EnumGameResult, {
    nullable: true,
  })
  result?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => TournamentGameCreateNestedManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => TournamentGameCreateNestedManyWithoutGamesInput)
  @IsOptional()
  @Field(() => TournamentGameCreateNestedManyWithoutGamesInput, {
    nullable: true,
  })
  tournamentGames?: TournamentGameCreateNestedManyWithoutGamesInput;
}

export { GameCreateInput as GameCreateInput };
